// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return FirebaseOptions(
        apiKey: "AIzaSyCuI9TJwdxQvDrETPq2hq8I0BdoVfD3wFQ",
        authDomain: "econoengine.firebaseapp.com",
        projectId: "econoengine",
        storageBucket: "econoengine.firebasestorage.app",
        messagingSenderId: "1016670913663",
        appId: "1:1016670913663:web:e4324b1106dc06848bab4a"
      );
    }
    if (kIsWeb) {
      throw UnsupportedError(
        'DefaultFirebaseOptions have not been configured for web - '
        'you can reconfigure this by running the FlutterFire CLI again.',
      );
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for macos - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'AIzaSyB-aCHQ04bUM4s_h8coZib6iKowtyO_euo',
    appId: '1:1016670913663:android:a7e42702763ccb328bab4a',
    messagingSenderId: '1016670913663',
    projectId: 'econoengine',
    storageBucket: 'econoengine.firebasestorage.app',
  );

  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: 'AIzaSyAYQ5Gu7BnBQ8nDj18x34HiV6H609ZsIHQ',
    appId: '1:1016670913663:ios:dd20bde4256f0e028bab4a',
    messagingSenderId: '1016670913663',
    projectId: 'econoengine',
    storageBucket: 'econoengine.firebasestorage.app',
    iosBundleId: 'com.example.econoengine',
  );

}